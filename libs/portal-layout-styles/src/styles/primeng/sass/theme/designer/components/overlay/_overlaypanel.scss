@use 'sass:math';

.p-overlaypanel {
  background: var(--panel-content-bg);
  color: var(--text-color);
  border: var(--overlay-content-border);
  border-radius: var(--border-radius);
  box-shadow: var(--overlay-container-shadow);

  .p-overlaypanel-content {
    padding: var(--panel-content-padding);
  }

  .p-overlaypanel-close {
    background: var(--primary-color);
    color: var(--primary-text-color);
    width: var(--action-icon-width);
    height: var(--action-icon-height);
    transition: var(--action-icon-transition);
    border-radius: var(--action-icon-border-radius);
    position: absolute;
    top: math.div(-1 * $actionIconWidth, 2);
    right: math.div(-1 * $actionIconWidth, 2);

    &:enabled:hover {
      background: var(--button-hover-bg);
      color: var(--primary-text-color);
    }

    &:enabled:focus {
      outline: $buttonFocusOutline;
      outline-offset: $buttonFocusOutlineOffset;
      box-shadow: none;  
    }
  }

  &:after {
    border: solid transparent;
    border-color: rgba(var(--panel-content-bg-rgb), 0);
    border-bottom-color: var(--panel-content-bg);
  }

  &:before {
    border: solid transparent;

    @if (nth($overlayContentBorder, 2) == 'none') {
      border-color: rgba(var(--panel-content-bg-rgb), 0);
      border-bottom-color: var(--panel-content-bg);
    } @else {
      border-color: rgba(nth($overlayContentBorder, 3), 0);
      border-bottom-color: nth($overlayContentBorder, 3);
    }
  }

  &.p-overlaypanel-flipped {
    &:after {
      border-top-color: var(--panel-content-bg);
    }

    &:before {
      @if (nth($overlayContentBorder, 2) == 'none') {
        border-top-color: var(--panel-content-bg);
      } @else {
        border-top-color: nth($overlayContentBorder, 3);
      }
    }
  }
}
